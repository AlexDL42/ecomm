{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signIn() {\n  try {\n    if (UserActionTypes.GOOGLE_SIGN_IN_START) {\n      const {\n        user\n      } = yield auth.signInWithEmailAndPassword(email, password);\n    } else if (UserActionTypes.EMAIL_SIGN_IN_START) {\n      const {\n        user\n      } = yield auth.signInWithPopup(googleProvider);\n    }\n\n    ;\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signIn);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signIn);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/a1k7d/Desktop/dev/trainings/react_dev_2020_ztm/ecomm/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signIn","GOOGLE_SIGN_IN_START","user","signInWithEmailAndPassword","email","password","EMAIL_SIGN_IN_START","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACIC,aADJ,EAEIC,aAFJ,QAGO,gBAHP;AAKA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,yBAHJ,QAIO,+BAJP;AAOA,OAAO,UAAUC,MAAV,GAAoB;AACvB,MAAI;AACA,QAAIN,eAAe,CAACO,oBAApB,EAA0C;AACtC,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAML,IAAI,CAACM,0BAAL,CAAgCC,KAAhC,EAAuCC,QAAvC,CAAvB;AACH,KAFD,MAEO,IAAIX,eAAe,CAACY,mBAApB,EAAyC;AAC5C,YAAM;AAAEJ,QAAAA;AAAF,UAAW,MAAML,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAAvB;AACH;;AAAA;AACD,UAAMU,OAAO,GAAG,MAAMf,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMO,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMnB,GAAG,CAACI,aAAa,CAAC;AAAEgB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AAGH,GAZD,CAYE,OAAMC,KAAN,EAAa;AACX,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMxB,UAAU,CAACI,eAAe,CAACO,oBAAjB,EAAuCD,MAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAMzB,UAAU,CAACI,eAAe,CAACY,mBAAjB,EAAsCN,MAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUgB,SAAV,GAAsB;AACzB,QAAMxB,GAAG,CAAC,CACNC,IAAI,CAACqB,mBAAD,CADE,EAENrB,IAAI,CAACsB,kBAAD,CAFE,CAAD,CAAT;AAIA;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {\r\n    signInSuccess,\r\n    signInFailure\r\n} from './user.actions';\r\n\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument\r\n} from '../../firebase/firebase.utils';\r\n\r\n\r\nexport function* signIn () {\r\n    try {\r\n        if (UserActionTypes.GOOGLE_SIGN_IN_START) {\r\n            const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        } else if (UserActionTypes.EMAIL_SIGN_IN_START) {\r\n            const { user } = yield auth.signInWithPopup(googleProvider);\r\n        };\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\r\n\r\n\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signIn);\r\n};\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signIn);\r\n};\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart)\r\n    ])\r\n   };"]},"metadata":{},"sourceType":"module"}